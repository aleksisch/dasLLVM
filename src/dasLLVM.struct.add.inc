// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

auto ann__Lldiv_t = make_smart<_Lldiv_t_GeneratedAnnotation>(lib);
addAnnotation(ann__Lldiv_t);
auto ann_LLVMOpInfoSymbol1 = make_smart<LLVMOpInfoSymbol1_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOpInfoSymbol1);
auto ann_LLVMOpInfo1 = make_smart<LLVMOpInfo1_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOpInfo1);
auto ann_LLVMMCJITCompilerOptions = make_smart<LLVMMCJITCompilerOptions_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMMCJITCompilerOptions);
auto ann_LLVMJITSymbolFlags = make_smart<LLVMJITSymbolFlags_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMJITSymbolFlags);
auto ann_LLVMJITEvaluatedSymbol = make_smart<LLVMJITEvaluatedSymbol_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMJITEvaluatedSymbol);
auto ann_LLVMOrcCSymbolFlagsMapPair = make_smart<LLVMOrcCSymbolFlagsMapPair_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCSymbolFlagsMapPair);
auto ann_LLVMOrcCSymbolMapPair = make_smart<LLVMOrcCSymbolMapPair_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCSymbolMapPair);
auto ann_LLVMOrcCSymbolAliasMapEntry = make_smart<LLVMOrcCSymbolAliasMapEntry_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCSymbolAliasMapEntry);
auto ann_LLVMOrcCSymbolAliasMapPair = make_smart<LLVMOrcCSymbolAliasMapPair_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCSymbolAliasMapPair);
auto ann_LLVMOrcCSymbolsList = make_smart<LLVMOrcCSymbolsList_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCSymbolsList);
auto ann_LLVMOrcCDependenceMapPair = make_smart<LLVMOrcCDependenceMapPair_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCDependenceMapPair);
auto ann_LLVMOrcCJITDylibSearchOrderElement = make_smart<LLVMOrcCJITDylibSearchOrderElement_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCJITDylibSearchOrderElement);
auto ann_LLVMOrcCLookupSetElement = make_smart<LLVMOrcCLookupSetElement_GeneratedAnnotation>(lib);
addAnnotation(ann_LLVMOrcCLookupSetElement);
auto ann_LTOObjectBuffer = make_smart<LTOObjectBuffer_GeneratedAnnotation>(lib);
addAnnotation(ann_LTOObjectBuffer);
