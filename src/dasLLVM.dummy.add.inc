// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueValue", "LLVMOpaqueValue", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMTarget", "LLVMTarget", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueLLJIT", "LLVMOrcOpaqueLLJIT", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueIndirectStubsManager", "LLVMOrcOpaqueIndirectStubsManager", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueThreadSafeModule", "LLVMOrcOpaqueThreadSafeModule", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueExecutionEngine", "LLVMOpaqueExecutionEngine", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMComdat", "LLVMComdat", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueLTOInput", "LLVMOpaqueLTOInput", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueDIBuilder", "LLVMOpaqueDIBuilder", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueTargetLibraryInfotData", "LLVMOpaqueTargetLibraryInfotData", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMRemarkOpaqueString", "LLVMRemarkOpaqueString", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueObjectLayer", "LLVMOrcOpaqueObjectLayer", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueModuleFlagEntry", "LLVMOpaqueModuleFlagEntry", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueBuilder", "LLVMOpaqueBuilder", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueLTOModule", "LLVMOpaqueLTOModule", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueGenericValue", "LLVMOpaqueGenericValue", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaquePassBuilderOptions", "LLVMOpaquePassBuilderOptions", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueLTOCodeGenerator", "LLVMOpaqueLTOCodeGenerator", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueSymbolStringPoolEntry", "LLVMOrcOpaqueSymbolStringPoolEntry", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueThinLTOCodeGenerator", "LLVMOpaqueThinLTOCodeGenerator", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueAttributeRef", "LLVMOpaqueAttributeRef", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueLazyCallThroughManager", "LLVMOrcOpaqueLazyCallThroughManager", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueObjectTransformLayer", "LLVMOrcOpaqueObjectTransformLayer", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueContext", "LLVMOpaqueContext", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaquePassRegistry", "LLVMOpaquePassRegistry", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueIRTransformLayer", "LLVMOrcOpaqueIRTransformLayer", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueLookupState", "LLVMOrcOpaqueLookupState", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueValueMetadataEntry", "LLVMOpaqueValueMetadataEntry", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaquePassManagerBuilder", "LLVMOpaquePassManagerBuilder", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueModule", "LLVMOpaqueModule", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueThreadSafeContext", "LLVMOrcOpaqueThreadSafeContext", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueTargetData", "LLVMOpaqueTargetData", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueLLJITBuilder", "LLVMOrcOpaqueLLJITBuilder", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueExecutionSession", "LLVMOrcOpaqueExecutionSession", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueSymbolStringPool", "LLVMOrcOpaqueSymbolStringPool", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueType", "LLVMOpaqueType", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueUse", "LLVMOpaqueUse", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueDefinitionGenerator", "LLVMOrcOpaqueDefinitionGenerator", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueJITTargetMachineBuilder", "LLVMOrcOpaqueJITTargetMachineBuilder", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueBasicBlock", "LLVMOpaqueBasicBlock", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueObjectLinkingLayer", "LLVMOrcOpaqueObjectLinkingLayer", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMRemarkOpaqueArg", "LLVMRemarkOpaqueArg", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueNamedMDNode", "LLVMOpaqueNamedMDNode", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueMaterializationUnit", "LLVMOrcOpaqueMaterializationUnit", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueError", "LLVMOpaqueError", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueSymbolIterator", "LLVMOpaqueSymbolIterator", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueTargetMachine", "LLVMOpaqueTargetMachine", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMRemarkOpaqueParser", "LLVMRemarkOpaqueParser", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaquePassManager", "LLVMOpaquePassManager", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueDumpObjects", "LLVMOrcOpaqueDumpObjects", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueModuleProvider", "LLVMOpaqueModuleProvider", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueMCJITMemoryManager", "LLVMOpaqueMCJITMemoryManager", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueJITEventListener", "LLVMOpaqueJITEventListener", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueMemoryBuffer", "LLVMOpaqueMemoryBuffer", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueJITDylib", "LLVMOrcOpaqueJITDylib", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueMetadata", "LLVMOpaqueMetadata", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueBinary", "LLVMOpaqueBinary", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueResourceTracker", "LLVMOrcOpaqueResourceTracker", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueSectionIterator", "LLVMOpaqueSectionIterator", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOrcOpaqueMaterializationResponsibility", "LLVMOrcOpaqueMaterializationResponsibility", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueDiagnosticInfo", "LLVMOpaqueDiagnosticInfo", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueObjectFile", "LLVMOpaqueObjectFile", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMOpaqueRelocationIterator", "LLVMOpaqueRelocationIterator", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMRemarkOpaqueDebugLoc", "LLVMRemarkOpaqueDebugLoc", 1, 1));
addAnnotation(make_smart<DummyTypeAnnotation>("LLVMRemarkOpaqueEntry", "LLVMRemarkOpaqueEntry", 1, 1));
