// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\inttypes.h:35:18
auto alias_imaxdiv_t = typeFactory<_Lldiv_t>::make(lib);
alias_imaxdiv_t->alias = "imaxdiv_t";
addAlias(alias_imaxdiv_t);

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\sys/types.h:19:28
auto alias__ino_t = typeFactory<unsigned short>::make(lib);
alias__ino_t->alias = "_ino_t";
addAlias(alias__ino_t);

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\sys/types.h:22:24
auto alias_ino_t = typeFactory<unsigned short>::make(lib);
alias_ino_t->alias = "ino_t";
addAlias(alias_ino_t);

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\sys/types.h:31:26
auto alias__dev_t = typeFactory<unsigned int>::make(lib);
alias__dev_t->alias = "_dev_t";
addAlias(alias__dev_t);

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\sys/types.h:34:24
auto alias_dev_t = typeFactory<unsigned int>::make(lib);
alias_dev_t->alias = "dev_t";
addAlias(alias_dev_t);

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\sys/types.h:43:18
auto alias__off_t = typeFactory<long>::make(lib);
alias__off_t->alias = "_off_t";
addAlias(alias__off_t);

// from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\sys/types.h:46:24
auto alias_off_t = typeFactory<long>::make(lib);
alias_off_t->alias = "off_t";
addAlias(alias_off_t);

// from D:\Work\libclang\include\llvm-c/DataTypes.h:62:24
auto alias_ssize_t = typeFactory<long long>::make(lib);
alias_ssize_t->alias = "ssize_t";
addAlias(alias_ssize_t);

// from D:\Work\libclang\include\llvm-c/Types.h:28:13
auto alias_LLVMBool = typeFactory<int>::make(lib);
alias_LLVMBool->alias = "LLVMBool";
addAlias(alias_LLVMBool);

// from D:\Work\libclang\include\llvm-c/Types.h:48:40
auto alias_LLVMMemoryBufferRef = typeFactory<LLVMOpaqueMemoryBuffer *>::make(lib);
alias_LLVMMemoryBufferRef->alias = "LLVMMemoryBufferRef";
addAlias(alias_LLVMMemoryBufferRef);

// from D:\Work\libclang\include\llvm-c/Types.h:53:35
auto alias_LLVMContextRef = typeFactory<LLVMOpaqueContext *>::make(lib);
alias_LLVMContextRef->alias = "LLVMContextRef";
addAlias(alias_LLVMContextRef);

// from D:\Work\libclang\include\llvm-c/Types.h:61:34
auto alias_LLVMModuleRef = typeFactory<LLVMOpaqueModule *>::make(lib);
alias_LLVMModuleRef->alias = "LLVMModuleRef";
addAlias(alias_LLVMModuleRef);

// from D:\Work\libclang\include\llvm-c/Types.h:68:32
auto alias_LLVMTypeRef = typeFactory<LLVMOpaqueType *>::make(lib);
alias_LLVMTypeRef->alias = "LLVMTypeRef";
addAlias(alias_LLVMTypeRef);

// from D:\Work\libclang\include\llvm-c/Types.h:75:33
auto alias_LLVMValueRef = typeFactory<LLVMOpaqueValue *>::make(lib);
alias_LLVMValueRef->alias = "LLVMValueRef";
addAlias(alias_LLVMValueRef);

// from D:\Work\libclang\include\llvm-c/Types.h:82:38
auto alias_LLVMBasicBlockRef = typeFactory<LLVMOpaqueBasicBlock *>::make(lib);
alias_LLVMBasicBlockRef->alias = "LLVMBasicBlockRef";
addAlias(alias_LLVMBasicBlockRef);

// from D:\Work\libclang\include\llvm-c/Types.h:89:36
auto alias_LLVMMetadataRef = typeFactory<LLVMOpaqueMetadata *>::make(lib);
alias_LLVMMetadataRef->alias = "LLVMMetadataRef";
addAlias(alias_LLVMMetadataRef);

// from D:\Work\libclang\include\llvm-c/Types.h:96:39
auto alias_LLVMNamedMDNodeRef = typeFactory<LLVMOpaqueNamedMDNode *>::make(lib);
alias_LLVMNamedMDNodeRef->alias = "LLVMNamedMDNodeRef";
addAlias(alias_LLVMNamedMDNodeRef);

// from D:\Work\libclang\include\llvm-c/Types.h:103:45
auto alias_LLVMValueMetadataEntry = typeFactory<LLVMOpaqueValueMetadataEntry>::make(lib);
alias_LLVMValueMetadataEntry->alias = "LLVMValueMetadataEntry";
addAlias(alias_LLVMValueMetadataEntry);

// from D:\Work\libclang\include\llvm-c/Types.h:110:35
auto alias_LLVMBuilderRef = typeFactory<LLVMOpaqueBuilder *>::make(lib);
alias_LLVMBuilderRef->alias = "LLVMBuilderRef";
addAlias(alias_LLVMBuilderRef);

// from D:\Work\libclang\include\llvm-c/Types.h:117:37
auto alias_LLVMDIBuilderRef = typeFactory<LLVMOpaqueDIBuilder *>::make(lib);
alias_LLVMDIBuilderRef->alias = "LLVMDIBuilderRef";
addAlias(alias_LLVMDIBuilderRef);

// from D:\Work\libclang\include\llvm-c/Types.h:124:42
auto alias_LLVMModuleProviderRef = typeFactory<LLVMOpaqueModuleProvider *>::make(lib);
alias_LLVMModuleProviderRef->alias = "LLVMModuleProviderRef";
addAlias(alias_LLVMModuleProviderRef);

// from D:\Work\libclang\include\llvm-c/Types.h:127:39
auto alias_LLVMPassManagerRef = typeFactory<LLVMOpaquePassManager *>::make(lib);
alias_LLVMPassManagerRef->alias = "LLVMPassManagerRef";
addAlias(alias_LLVMPassManagerRef);

// from D:\Work\libclang\include\llvm-c/Types.h:130:40
auto alias_LLVMPassRegistryRef = typeFactory<LLVMOpaquePassRegistry *>::make(lib);
alias_LLVMPassRegistryRef->alias = "LLVMPassRegistryRef";
addAlias(alias_LLVMPassRegistryRef);

// from D:\Work\libclang\include\llvm-c/Types.h:136:31
auto alias_LLVMUseRef = typeFactory<LLVMOpaqueUse *>::make(lib);
alias_LLVMUseRef->alias = "LLVMUseRef";
addAlias(alias_LLVMUseRef);

// from D:\Work\libclang\include\llvm-c/Types.h:143:40
auto alias_LLVMAttributeRef = typeFactory<LLVMOpaqueAttributeRef *>::make(lib);
alias_LLVMAttributeRef->alias = "LLVMAttributeRef";
addAlias(alias_LLVMAttributeRef);

// from D:\Work\libclang\include\llvm-c/Types.h:148:42
auto alias_LLVMDiagnosticInfoRef = typeFactory<LLVMOpaqueDiagnosticInfo *>::make(lib);
alias_LLVMDiagnosticInfoRef->alias = "LLVMDiagnosticInfoRef";
addAlias(alias_LLVMDiagnosticInfoRef);

// from D:\Work\libclang\include\llvm-c/Types.h:153:28
auto alias_LLVMComdatRef = typeFactory<LLVMComdat *>::make(lib);
alias_LLVMComdatRef->alias = "LLVMComdatRef";
addAlias(alias_LLVMComdatRef);

// from D:\Work\libclang\include\llvm-c/Types.h:158:42
auto alias_LLVMModuleFlagEntry = typeFactory<LLVMOpaqueModuleFlagEntry>::make(lib);
alias_LLVMModuleFlagEntry->alias = "LLVMModuleFlagEntry";
addAlias(alias_LLVMModuleFlagEntry);

// from D:\Work\libclang\include\llvm-c/Types.h:163:44
auto alias_LLVMJITEventListenerRef = typeFactory<LLVMOpaqueJITEventListener *>::make(lib);
alias_LLVMJITEventListenerRef->alias = "LLVMJITEventListenerRef";
addAlias(alias_LLVMJITEventListenerRef);

// from D:\Work\libclang\include\llvm-c/Types.h:168:34
auto alias_LLVMBinaryRef = typeFactory<LLVMOpaqueBinary *>::make(lib);
alias_LLVMBinaryRef->alias = "LLVMBinaryRef";
addAlias(alias_LLVMBinaryRef);

// from D:\Work\libclang\include\llvm-c/ErrorHandling.h:27:16
auto alias_LLVMFatalErrorHandler = typeFactory<void (*)(const char *)>::make(lib);
alias_LLVMFatalErrorHandler->alias = "LLVMFatalErrorHandler";
addAlias(alias_LLVMFatalErrorHandler);

// from D:\Work\libclang\include\llvm-c/Core.h:471:18
auto alias_LLVMAttributeIndex = typeFactory<unsigned int>::make(lib);
alias_LLVMAttributeIndex->alias = "LLVMAttributeIndex";
addAlias(alias_LLVMAttributeIndex);

// from D:\Work\libclang\include\llvm-c/Core.h:511:16
auto alias_LLVMDiagnosticHandler = typeFactory<void (*)(LLVMOpaqueDiagnosticInfo *, void *)>::make(lib);
alias_LLVMDiagnosticHandler->alias = "LLVMDiagnosticHandler";
addAlias(alias_LLVMDiagnosticHandler);

// from D:\Work\libclang\include\llvm-c/Core.h:512:16
auto alias_LLVMYieldCallback = typeFactory<void (*)(LLVMOpaqueContext *, void *)>::make(lib);
alias_LLVMYieldCallback->alias = "LLVMYieldCallback";
addAlias(alias_LLVMYieldCallback);

// from D:\Work\libclang\include\llvm-c/DebugInfo.h:184:18
auto alias_LLVMMetadataKind = typeFactory<unsigned int>::make(lib);
alias_LLVMMetadataKind->alias = "LLVMMetadataKind";
addAlias(alias_LLVMMetadataKind);

// from D:\Work\libclang\include\llvm-c/DebugInfo.h:189:18
auto alias_LLVMDWARFTypeEncoding = typeFactory<unsigned int>::make(lib);
alias_LLVMDWARFTypeEncoding->alias = "LLVMDWARFTypeEncoding";
addAlias(alias_LLVMDWARFTypeEncoding);

// from D:\Work\libclang\include\llvm-c/DisassemblerTypes.h:29:15
auto alias_LLVMDisasmContextRef = typeFactory<void *>::make(lib);
alias_LLVMDisasmContextRef->alias = "LLVMDisasmContextRef";
addAlias(alias_LLVMDisasmContextRef);

// from D:\Work\libclang\include\llvm-c/DisassemblerTypes.h:48:15
auto alias_LLVMOpInfoCallback = typeFactory<int (*)(void *, unsigned long long, unsigned long long, unsigned long long, unsigned long long, int, void *)>::make(lib);
alias_LLVMOpInfoCallback->alias = "LLVMOpInfoCallback";
addAlias(alias_LLVMOpInfoCallback);

// from D:\Work\libclang\include\llvm-c/DisassemblerTypes.h:118:23
auto alias_LLVMSymbolLookupCallback = typeFactory<const char *(*)(void *, unsigned long long, unsigned long long *, unsigned long long, const char **)>::make(lib);
alias_LLVMSymbolLookupCallback->alias = "LLVMSymbolLookupCallback";
addAlias(alias_LLVMSymbolLookupCallback);

// from D:\Work\libclang\include\llvm-c/Error.h:33:33
auto alias_LLVMErrorRef = typeFactory<LLVMOpaqueError *>::make(lib);
alias_LLVMErrorRef->alias = "LLVMErrorRef";
addAlias(alias_LLVMErrorRef);

// from D:\Work\libclang\include\llvm-c/Error.h:38:21
auto alias_LLVMErrorTypeId = typeFactory<const void *>::make(lib);
alias_LLVMErrorTypeId->alias = "LLVMErrorTypeId";
addAlias(alias_LLVMErrorTypeId);

// from D:\Work\libclang\include\llvm-c/Target.h:37:38
auto alias_LLVMTargetDataRef = typeFactory<LLVMOpaqueTargetData *>::make(lib);
alias_LLVMTargetDataRef->alias = "LLVMTargetDataRef";
addAlias(alias_LLVMTargetDataRef);

// from D:\Work\libclang\include\llvm-c/Target.h:38:50
auto alias_LLVMTargetLibraryInfoRef = typeFactory<LLVMOpaqueTargetLibraryInfotData *>::make(lib);
alias_LLVMTargetLibraryInfoRef->alias = "LLVMTargetLibraryInfoRef";
addAlias(alias_LLVMTargetLibraryInfoRef);

// from D:\Work\libclang\include\llvm-c/TargetMachine.h:34:41
auto alias_LLVMTargetMachineRef = typeFactory<LLVMOpaqueTargetMachine *>::make(lib);
alias_LLVMTargetMachineRef->alias = "LLVMTargetMachineRef";
addAlias(alias_LLVMTargetMachineRef);

// from D:\Work\libclang\include\llvm-c/TargetMachine.h:35:28
auto alias_LLVMTargetRef = typeFactory<LLVMTarget *>::make(lib);
alias_LLVMTargetRef->alias = "LLVMTargetRef";
addAlias(alias_LLVMTargetRef);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:39:40
auto alias_LLVMGenericValueRef = typeFactory<LLVMOpaqueGenericValue *>::make(lib);
alias_LLVMGenericValueRef->alias = "LLVMGenericValueRef";
addAlias(alias_LLVMGenericValueRef);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:40:43
auto alias_LLVMExecutionEngineRef = typeFactory<LLVMOpaqueExecutionEngine *>::make(lib);
alias_LLVMExecutionEngineRef->alias = "LLVMExecutionEngineRef";
addAlias(alias_LLVMExecutionEngineRef);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:41:46
auto alias_LLVMMCJITMemoryManagerRef = typeFactory<LLVMOpaqueMCJITMemoryManager *>::make(lib);
alias_LLVMMCJITMemoryManagerRef->alias = "LLVMMCJITMemoryManagerRef";
addAlias(alias_LLVMMCJITMemoryManagerRef);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:159:20
auto alias_LLVMMemoryManagerAllocateCodeSectionCallback = typeFactory<unsigned char *(*)(void *, unsigned long long, unsigned int, unsigned int, const char *)>::make(lib);
alias_LLVMMemoryManagerAllocateCodeSectionCallback->alias = "LLVMMemoryManagerAllocateCodeSectionCallback";
addAlias(alias_LLVMMemoryManagerAllocateCodeSectionCallback);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:162:20
auto alias_LLVMMemoryManagerAllocateDataSectionCallback = typeFactory<unsigned char *(*)(void *, unsigned long long, unsigned int, unsigned int, const char *, int)>::make(lib);
alias_LLVMMemoryManagerAllocateDataSectionCallback->alias = "LLVMMemoryManagerAllocateDataSectionCallback";
addAlias(alias_LLVMMemoryManagerAllocateDataSectionCallback);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:165:20
auto alias_LLVMMemoryManagerFinalizeMemoryCallback = typeFactory<int (*)(void *, char **)>::make(lib);
alias_LLVMMemoryManagerFinalizeMemoryCallback->alias = "LLVMMemoryManagerFinalizeMemoryCallback";
addAlias(alias_LLVMMemoryManagerFinalizeMemoryCallback);

// from D:\Work\libclang\include\llvm-c/ExecutionEngine.h:167:16
auto alias_LLVMMemoryManagerDestroyCallback = typeFactory<void (*)(void *)>::make(lib);
alias_LLVMMemoryManagerDestroyCallback->alias = "LLVMMemoryManagerDestroyCallback";
addAlias(alias_LLVMMemoryManagerDestroyCallback);

// from D:\Work\libclang\include\llvm-c/Orc.h:46:18
auto alias_LLVMOrcJITTargetAddress = typeFactory<unsigned long long>::make(lib);
alias_LLVMOrcJITTargetAddress->alias = "LLVMOrcJITTargetAddress";
addAlias(alias_LLVMOrcJITTargetAddress);

// from D:\Work\libclang\include\llvm-c/Orc.h:51:18
auto alias_LLVMOrcExecutorAddress = typeFactory<unsigned long long>::make(lib);
alias_LLVMOrcExecutorAddress->alias = "LLVMOrcExecutorAddress";
addAlias(alias_LLVMOrcExecutorAddress);

// from D:\Work\libclang\include\llvm-c/Orc.h:67:17
auto alias_LLVMJITSymbolTargetFlags = typeFactory<unsigned char>::make(lib);
alias_LLVMJITSymbolTargetFlags->alias = "LLVMJITSymbolTargetFlags";
addAlias(alias_LLVMJITSymbolTargetFlags);

// from D:\Work\libclang\include\llvm-c/Orc.h:88:47
auto alias_LLVMOrcExecutionSessionRef = typeFactory<LLVMOrcOpaqueExecutionSession *>::make(lib);
alias_LLVMOrcExecutionSessionRef->alias = "LLVMOrcExecutionSessionRef";
addAlias(alias_LLVMOrcExecutionSessionRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:93:16
auto alias_LLVMOrcErrorReporterFunction = typeFactory<void (*)(void *, LLVMOpaqueError *)>::make(lib);
alias_LLVMOrcErrorReporterFunction->alias = "LLVMOrcErrorReporterFunction";
addAlias(alias_LLVMOrcErrorReporterFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:98:47
auto alias_LLVMOrcSymbolStringPoolRef = typeFactory<LLVMOrcOpaqueSymbolStringPool *>::make(lib);
alias_LLVMOrcSymbolStringPoolRef->alias = "LLVMOrcSymbolStringPoolRef";
addAlias(alias_LLVMOrcSymbolStringPoolRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:104:6
auto alias_LLVMOrcSymbolStringPoolEntryRef = typeFactory<LLVMOrcOpaqueSymbolStringPoolEntry *>::make(lib);
alias_LLVMOrcSymbolStringPoolEntryRef->alias = "LLVMOrcSymbolStringPoolEntryRef";
addAlias(alias_LLVMOrcSymbolStringPoolEntryRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:118:37
auto alias_LLVMOrcCSymbolFlagsMapPairs = typeFactory<LLVMOrcCSymbolFlagsMapPair *>::make(lib);
alias_LLVMOrcCSymbolFlagsMapPairs->alias = "LLVMOrcCSymbolFlagsMapPairs";
addAlias(alias_LLVMOrcCSymbolFlagsMapPairs);

// from D:\Work\libclang\include\llvm-c/Orc.h:132:32
auto alias_LLVMOrcCSymbolMapPairs = typeFactory<LLVMOrcCSymbolMapPair *>::make(lib);
alias_LLVMOrcCSymbolMapPairs->alias = "LLVMOrcCSymbolMapPairs";
addAlias(alias_LLVMOrcCSymbolMapPairs);

// from D:\Work\libclang\include\llvm-c/Orc.h:154:37
auto alias_LLVMOrcCSymbolAliasMapPairs = typeFactory<LLVMOrcCSymbolAliasMapPair *>::make(lib);
alias_LLVMOrcCSymbolAliasMapPairs->alias = "LLVMOrcCSymbolAliasMapPairs";
addAlias(alias_LLVMOrcCSymbolAliasMapPairs);

// from D:\Work\libclang\include\llvm-c/Orc.h:159:39
auto alias_LLVMOrcJITDylibRef = typeFactory<LLVMOrcOpaqueJITDylib *>::make(lib);
alias_LLVMOrcJITDylibRef->alias = "LLVMOrcJITDylibRef";
addAlias(alias_LLVMOrcJITDylibRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:182:36
auto alias_LLVMOrcCDependenceMapPairs = typeFactory<LLVMOrcCDependenceMapPair *>::make(lib);
alias_LLVMOrcCDependenceMapPairs->alias = "LLVMOrcCDependenceMapPairs";
addAlias(alias_LLVMOrcCDependenceMapPairs);

// from D:\Work\libclang\include\llvm-c/Orc.h:220:45
auto alias_LLVMOrcCJITDylibSearchOrder = typeFactory<LLVMOrcCJITDylibSearchOrderElement *>::make(lib);
alias_LLVMOrcCJITDylibSearchOrder->alias = "LLVMOrcCJITDylibSearchOrder";
addAlias(alias_LLVMOrcCJITDylibSearchOrder);

// from D:\Work\libclang\include\llvm-c/Orc.h:250:35
auto alias_LLVMOrcCLookupSet = typeFactory<LLVMOrcCLookupSetElement *>::make(lib);
alias_LLVMOrcCLookupSet->alias = "LLVMOrcCLookupSet";
addAlias(alias_LLVMOrcCLookupSet);

// from D:\Work\libclang\include\llvm-c/Orc.h:255:50
auto alias_LLVMOrcMaterializationUnitRef = typeFactory<LLVMOrcOpaqueMaterializationUnit *>::make(lib);
alias_LLVMOrcMaterializationUnitRef->alias = "LLVMOrcMaterializationUnitRef";
addAlias(alias_LLVMOrcMaterializationUnitRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:263:6
auto alias_LLVMOrcMaterializationResponsibilityRef = typeFactory<LLVMOrcOpaqueMaterializationResponsibility *>::make(lib);
alias_LLVMOrcMaterializationResponsibilityRef->alias = "LLVMOrcMaterializationResponsibilityRef";
addAlias(alias_LLVMOrcMaterializationResponsibilityRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:275:16
auto alias_LLVMOrcMaterializationUnitMaterializeFunction = typeFactory<void (*)(void *, LLVMOrcOpaqueMaterializationResponsibility *)>::make(lib);
alias_LLVMOrcMaterializationUnitMaterializeFunction->alias = "LLVMOrcMaterializationUnitMaterializeFunction";
addAlias(alias_LLVMOrcMaterializationUnitMaterializeFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:284:16
auto alias_LLVMOrcMaterializationUnitDiscardFunction = typeFactory<void (*)(void *, LLVMOrcOpaqueJITDylib *, LLVMOrcOpaqueSymbolStringPoolEntry *)>::make(lib);
alias_LLVMOrcMaterializationUnitDiscardFunction->alias = "LLVMOrcMaterializationUnitDiscardFunction";
addAlias(alias_LLVMOrcMaterializationUnitDiscardFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:294:16
auto alias_LLVMOrcMaterializationUnitDestroyFunction = typeFactory<void (*)(void *)>::make(lib);
alias_LLVMOrcMaterializationUnitDestroyFunction->alias = "LLVMOrcMaterializationUnitDestroyFunction";
addAlias(alias_LLVMOrcMaterializationUnitDestroyFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:299:46
auto alias_LLVMOrcResourceTrackerRef = typeFactory<LLVMOrcOpaqueResourceTracker *>::make(lib);
alias_LLVMOrcResourceTrackerRef->alias = "LLVMOrcResourceTrackerRef";
addAlias(alias_LLVMOrcResourceTrackerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:305:6
auto alias_LLVMOrcDefinitionGeneratorRef = typeFactory<LLVMOrcOpaqueDefinitionGenerator *>::make(lib);
alias_LLVMOrcDefinitionGeneratorRef->alias = "LLVMOrcDefinitionGeneratorRef";
addAlias(alias_LLVMOrcDefinitionGeneratorRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:319:42
auto alias_LLVMOrcLookupStateRef = typeFactory<LLVMOrcOpaqueLookupState *>::make(lib);
alias_LLVMOrcLookupStateRef->alias = "LLVMOrcLookupStateRef";
addAlias(alias_LLVMOrcLookupStateRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:354:24
auto alias_LLVMOrcCAPIDefinitionGeneratorTryToGenerateFunction = typeFactory<LLVMOpaqueError *(*)(LLVMOrcOpaqueDefinitionGenerator *, void *, LLVMOrcOpaqueLookupState **, LLVMOrcLookupKind, LLVMOrcOpaqueJITDylib *, LLVMOrcJITDylibLookupFlags, LLVMOrcCLookupSetElement *, unsigned long long)>::make(lib);
alias_LLVMOrcCAPIDefinitionGeneratorTryToGenerateFunction->alias = "LLVMOrcCAPIDefinitionGeneratorTryToGenerateFunction";
addAlias(alias_LLVMOrcCAPIDefinitionGeneratorTryToGenerateFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:366:16
auto alias_LLVMOrcDisposeCAPIDefinitionGeneratorFunction = typeFactory<void (*)(void *)>::make(lib);
alias_LLVMOrcDisposeCAPIDefinitionGeneratorFunction->alias = "LLVMOrcDisposeCAPIDefinitionGeneratorFunction";
addAlias(alias_LLVMOrcDisposeCAPIDefinitionGeneratorFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:371:15
auto alias_LLVMOrcSymbolPredicate = typeFactory<int (*)(void *, LLVMOrcOpaqueSymbolStringPoolEntry *)>::make(lib);
alias_LLVMOrcSymbolPredicate->alias = "LLVMOrcSymbolPredicate";
addAlias(alias_LLVMOrcSymbolPredicate);

// from D:\Work\libclang\include\llvm-c/Orc.h:377:48
auto alias_LLVMOrcThreadSafeContextRef = typeFactory<LLVMOrcOpaqueThreadSafeContext *>::make(lib);
alias_LLVMOrcThreadSafeContextRef->alias = "LLVMOrcThreadSafeContextRef";
addAlias(alias_LLVMOrcThreadSafeContextRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:382:47
auto alias_LLVMOrcThreadSafeModuleRef = typeFactory<LLVMOrcOpaqueThreadSafeModule *>::make(lib);
alias_LLVMOrcThreadSafeModuleRef->alias = "LLVMOrcThreadSafeModuleRef";
addAlias(alias_LLVMOrcThreadSafeModuleRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:388:24
auto alias_LLVMOrcGenericIRModuleOperationFunction = typeFactory<LLVMOpaqueError *(*)(void *, LLVMOpaqueModule *)>::make(lib);
alias_LLVMOrcGenericIRModuleOperationFunction->alias = "LLVMOrcGenericIRModuleOperationFunction";
addAlias(alias_LLVMOrcGenericIRModuleOperationFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:395:6
auto alias_LLVMOrcJITTargetMachineBuilderRef = typeFactory<LLVMOrcOpaqueJITTargetMachineBuilder *>::make(lib);
alias_LLVMOrcJITTargetMachineBuilderRef->alias = "LLVMOrcJITTargetMachineBuilderRef";
addAlias(alias_LLVMOrcJITTargetMachineBuilderRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:400:42
auto alias_LLVMOrcObjectLayerRef = typeFactory<LLVMOrcOpaqueObjectLayer *>::make(lib);
alias_LLVMOrcObjectLayerRef->alias = "LLVMOrcObjectLayerRef";
addAlias(alias_LLVMOrcObjectLayerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:405:49
auto alias_LLVMOrcObjectLinkingLayerRef = typeFactory<LLVMOrcOpaqueObjectLinkingLayer *>::make(lib);
alias_LLVMOrcObjectLinkingLayerRef->alias = "LLVMOrcObjectLinkingLayerRef";
addAlias(alias_LLVMOrcObjectLinkingLayerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:410:47
auto alias_LLVMOrcIRTransformLayerRef = typeFactory<LLVMOrcOpaqueIRTransformLayer *>::make(lib);
alias_LLVMOrcIRTransformLayerRef->alias = "LLVMOrcIRTransformLayerRef";
addAlias(alias_LLVMOrcIRTransformLayerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:427:24
auto alias_LLVMOrcIRTransformLayerTransformFunction = typeFactory<LLVMOpaqueError *(*)(void *, LLVMOrcOpaqueThreadSafeModule **, LLVMOrcOpaqueMaterializationResponsibility *)>::make(lib);
alias_LLVMOrcIRTransformLayerTransformFunction->alias = "LLVMOrcIRTransformLayerTransformFunction";
addAlias(alias_LLVMOrcIRTransformLayerTransformFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:435:6
auto alias_LLVMOrcObjectTransformLayerRef = typeFactory<LLVMOrcOpaqueObjectTransformLayer *>::make(lib);
alias_LLVMOrcObjectTransformLayerRef->alias = "LLVMOrcObjectTransformLayerRef";
addAlias(alias_LLVMOrcObjectTransformLayerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:450:24
auto alias_LLVMOrcObjectTransformLayerTransformFunction = typeFactory<LLVMOpaqueError *(*)(void *, LLVMOpaqueMemoryBuffer **)>::make(lib);
alias_LLVMOrcObjectTransformLayerTransformFunction->alias = "LLVMOrcObjectTransformLayerTransformFunction";
addAlias(alias_LLVMOrcObjectTransformLayerTransformFunction);

// from D:\Work\libclang\include\llvm-c/Orc.h:457:6
auto alias_LLVMOrcIndirectStubsManagerRef = typeFactory<LLVMOrcOpaqueIndirectStubsManager *>::make(lib);
alias_LLVMOrcIndirectStubsManagerRef->alias = "LLVMOrcIndirectStubsManagerRef";
addAlias(alias_LLVMOrcIndirectStubsManagerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:463:6
auto alias_LLVMOrcLazyCallThroughManagerRef = typeFactory<LLVMOrcOpaqueLazyCallThroughManager *>::make(lib);
alias_LLVMOrcLazyCallThroughManagerRef->alias = "LLVMOrcLazyCallThroughManagerRef";
addAlias(alias_LLVMOrcLazyCallThroughManagerRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:471:42
auto alias_LLVMOrcDumpObjectsRef = typeFactory<LLVMOrcOpaqueDumpObjects *>::make(lib);
alias_LLVMOrcDumpObjectsRef->alias = "LLVMOrcDumpObjectsRef";
addAlias(alias_LLVMOrcDumpObjectsRef);

// from D:\Work\libclang\include\llvm-c/Orc.h:536:16
auto alias_LLVMOrcExecutionSessionLookupHandleResultFunction = typeFactory<void (*)(LLVMOpaqueError *, LLVMOrcCSymbolMapPair *, unsigned long long, void *)>::make(lib);
alias_LLVMOrcExecutionSessionLookupHandleResultFunction->alias = "LLVMOrcExecutionSessionLookupHandleResultFunction";
addAlias(alias_LLVMOrcExecutionSessionLookupHandleResultFunction);

// from D:\Work\libclang\include\llvm-c/LLJIT.h:55:6
auto alias_LLVMOrcLLJITBuilderObjectLinkingLayerCreatorFunction = typeFactory<LLVMOrcOpaqueObjectLayer *(*)(void *, LLVMOrcOpaqueExecutionSession *, const char *)>::make(lib);
alias_LLVMOrcLLJITBuilderObjectLinkingLayerCreatorFunction->alias = "LLVMOrcLLJITBuilderObjectLinkingLayerCreatorFunction";
addAlias(alias_LLVMOrcLLJITBuilderObjectLinkingLayerCreatorFunction);

// from D:\Work\libclang\include\llvm-c/LLJIT.h:61:43
auto alias_LLVMOrcLLJITBuilderRef = typeFactory<LLVMOrcOpaqueLLJITBuilder *>::make(lib);
alias_LLVMOrcLLJITBuilderRef->alias = "LLVMOrcLLJITBuilderRef";
addAlias(alias_LLVMOrcLLJITBuilderRef);

// from D:\Work\libclang\include\llvm-c/LLJIT.h:66:36
auto alias_LLVMOrcLLJITRef = typeFactory<LLVMOrcOpaqueLLJIT *>::make(lib);
alias_LLVMOrcLLJITRef->alias = "LLVMOrcLLJITRef";
addAlias(alias_LLVMOrcLLJITRef);

// from D:\Work\libclang\include\llvm-c/lto.h:39:14
auto alias_lto_bool_t = typeFactory<bool>::make(lib);
alias_lto_bool_t->alias = "lto_bool_t";
addAlias(alias_lto_bool_t);

// from D:\Work\libclang\include\llvm-c/lto.h:95:37
auto alias_lto_module_t = typeFactory<LLVMOpaqueLTOModule *>::make(lib);
alias_lto_module_t->alias = "lto_module_t";
addAlias(alias_lto_module_t);

// from D:\Work\libclang\include\llvm-c/lto.h:98:44
auto alias_lto_code_gen_t = typeFactory<LLVMOpaqueLTOCodeGenerator *>::make(lib);
alias_lto_code_gen_t->alias = "lto_code_gen_t";
addAlias(alias_lto_code_gen_t);

// from D:\Work\libclang\include\llvm-c/lto.h:101:48
auto alias_thinlto_code_gen_t = typeFactory<LLVMOpaqueThinLTOCodeGenerator *>::make(lib);
alias_thinlto_code_gen_t->alias = "thinlto_code_gen_t";
addAlias(alias_thinlto_code_gen_t);

// from D:\Work\libclang\include\llvm-c/lto.h:346:16
auto alias_lto_diagnostic_handler_t = typeFactory<void (*)(lto_codegen_diagnostic_severity_t, const char *, void *)>::make(lib);
alias_lto_diagnostic_handler_t->alias = "lto_diagnostic_handler_t";
addAlias(alias_lto_diagnostic_handler_t);

// from D:\Work\libclang\include\llvm-c/lto.h:608:36
auto alias_lto_input_t = typeFactory<LLVMOpaqueLTOInput *>::make(lib);
alias_lto_input_t->alias = "lto_input_t";
addAlias(alias_lto_input_t);

// from D:\Work\libclang\include\llvm-c/Object.h:36:43
auto alias_LLVMSectionIteratorRef = typeFactory<LLVMOpaqueSectionIterator *>::make(lib);
alias_LLVMSectionIteratorRef->alias = "LLVMSectionIteratorRef";
addAlias(alias_LLVMSectionIteratorRef);

// from D:\Work\libclang\include\llvm-c/Object.h:37:42
auto alias_LLVMSymbolIteratorRef = typeFactory<LLVMOpaqueSymbolIterator *>::make(lib);
alias_LLVMSymbolIteratorRef->alias = "LLVMSymbolIteratorRef";
addAlias(alias_LLVMSymbolIteratorRef);

// from D:\Work\libclang\include\llvm-c/Object.h:38:46
auto alias_LLVMRelocationIteratorRef = typeFactory<LLVMOpaqueRelocationIterator *>::make(lib);
alias_LLVMRelocationIteratorRef->alias = "LLVMRelocationIteratorRef";
addAlias(alias_LLVMRelocationIteratorRef);

// from D:\Work\libclang\include\llvm-c/Object.h:205:38
auto alias_LLVMObjectFileRef = typeFactory<LLVMOpaqueObjectFile *>::make(lib);
alias_LLVMObjectFileRef->alias = "LLVMObjectFileRef";
addAlias(alias_LLVMObjectFileRef);

// from D:\Work\libclang\include\llvm-c/OrcEE.h:35:17
auto alias_LLVMMemoryManagerCreateContextCallback = typeFactory<void *(*)(void *)>::make(lib);
alias_LLVMMemoryManagerCreateContextCallback->alias = "LLVMMemoryManagerCreateContextCallback";
addAlias(alias_LLVMMemoryManagerCreateContextCallback);

// from D:\Work\libclang\include\llvm-c/OrcEE.h:36:16
auto alias_LLVMMemoryManagerNotifyTerminatingCallback = typeFactory<void (*)(void *)>::make(lib);
alias_LLVMMemoryManagerNotifyTerminatingCallback->alias = "LLVMMemoryManagerNotifyTerminatingCallback";
addAlias(alias_LLVMMemoryManagerNotifyTerminatingCallback);

// from D:\Work\libclang\include\llvm-c/Remarks.h:57:40
auto alias_LLVMRemarkStringRef = typeFactory<LLVMRemarkOpaqueString *>::make(lib);
alias_LLVMRemarkStringRef->alias = "LLVMRemarkStringRef";
addAlias(alias_LLVMRemarkStringRef);

// from D:\Work\libclang\include\llvm-c/Remarks.h:78:42
auto alias_LLVMRemarkDebugLocRef = typeFactory<LLVMRemarkOpaqueDebugLoc *>::make(lib);
alias_LLVMRemarkDebugLocRef->alias = "LLVMRemarkDebugLocRef";
addAlias(alias_LLVMRemarkDebugLocRef);

// from D:\Work\libclang\include\llvm-c/Remarks.h:109:37
auto alias_LLVMRemarkArgRef = typeFactory<LLVMRemarkOpaqueArg *>::make(lib);
alias_LLVMRemarkArgRef->alias = "LLVMRemarkArgRef";
addAlias(alias_LLVMRemarkArgRef);

// from D:\Work\libclang\include\llvm-c/Remarks.h:140:39
auto alias_LLVMRemarkEntryRef = typeFactory<LLVMRemarkOpaqueEntry *>::make(lib);
alias_LLVMRemarkEntryRef->alias = "LLVMRemarkEntryRef";
addAlias(alias_LLVMRemarkEntryRef);

// from D:\Work\libclang\include\llvm-c/Remarks.h:230:40
auto alias_LLVMRemarkParserRef = typeFactory<LLVMRemarkOpaqueParser *>::make(lib);
alias_LLVMRemarkParserRef->alias = "LLVMRemarkParserRef";
addAlias(alias_LLVMRemarkParserRef);

// from D:\Work\libclang\include\llvm-c/Transforms/PassBuilder.h:38:46
auto alias_LLVMPassBuilderOptionsRef = typeFactory<LLVMOpaquePassBuilderOptions *>::make(lib);
alias_LLVMPassBuilderOptionsRef->alias = "LLVMPassBuilderOptionsRef";
addAlias(alias_LLVMPassBuilderOptionsRef);

// from D:\Work\libclang\include\llvm-c/Transforms/PassManagerBuilder.h:20:46
auto alias_LLVMPassManagerBuilderRef = typeFactory<LLVMOpaquePassManagerBuilder *>::make(lib);
alias_LLVMPassManagerBuilderRef->alias = "LLVMPassManagerBuilderRef";
addAlias(alias_LLVMPassManagerBuilderRef);

